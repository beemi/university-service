plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.convert' version '1.5.8'
}

group = 'com.jaitech.ltd'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('testcontainersVersion', "1.17.6")
}

def springBootVersion = "2.6.6"
def lombokVersion = "1.18.22"

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// spring boot mongodb
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: springBootVersion

	// swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.13'

	compileOnly 'org.projectlombok:lombok:' + lombokVersion
	annotationProcessor 'org.projectlombok:lombok:' + lombokVersion
	testCompileOnly 'org.projectlombok:lombok:' + lombokVersion
	testAnnotationProcessor 'org.projectlombok:lombok:' + lombokVersion

	implementation "io.micrometer:micrometer-core"
	implementation "io.micrometer:micrometer-registry-prometheus"

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
